{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "call-to-action",
  "type": "registry:component",
  "title": "Call to Action",
  "description": "A versatile call-to-action component with multiple variants including default, highlight, centered, banner, and minimal styles for promoting user engagement.",
  "files": [
    {
      "path": "registry/call-to-action/components/call-to-action.tsx",
      "content": "import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst ctaVariants = cva(\n    \"relative flex rounded-md border bg-card transition-all\",\n    {\n        variants: {\n            variant: {\n                default: \"bg-card shadow-sm\",\n                highlight:\n                    \"border-primary bg-primary/20 backdrop-blur-sm shadow-sm\",\n                centered: \"flex-col items-center text-center\",\n                banner: \"w-fit flex-col md:flex-row !p-1 !pl-3\",\n                minimal: \"border-none shadow-none w-full\",\n            },\n            size: {\n                default: \"gap-4 p-4\",\n                sm: \"gap-2 p-2\",\n                lg: \"gap-6 p-6\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n);\n\ntype CallToActionVariants = VariantProps<typeof ctaVariants>;\ntype CallToActionVariant = NonNullable<CallToActionVariants[\"variant\"]>;\n\nconst CallToActionContext = React.createContext<{\n    variant?: CallToActionVariant;\n}>({});\n\nconst CallToAction = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof ctaVariants>\n>(({ className, variant = \"default\", size, ...props }, ref) => (\n    <CallToActionContext.Provider\n        value={{ variant: variant as CallToActionVariant }}\n    >\n        <div\n            ref={ref}\n            className={cn(ctaVariants({ variant, size, className }))}\n            {...props}\n        />\n    </CallToActionContext.Provider>\n));\nCallToAction.displayName = \"CallToAction\";\n\nconst CallToActionContent = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n    const { variant } = React.useContext(CallToActionContext);\n    return (\n        <div\n            ref={ref}\n            className={cn(\n                \"flex flex-col gap-2\",\n                variant === \"banner\" && \"mx-auto flex-row items-center\",\n                className\n            )}\n            {...props}\n        />\n    );\n});\nCallToActionContent.displayName = \"CallToActionContent\";\n\nconst CallToActionTitle = React.forwardRef<\n    HTMLHeadingElement,\n    React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => {\n    const { variant } = React.useContext(CallToActionContext);\n    return (\n        <h3\n            ref={ref}\n            className={cn(\n                \"text-2xl font-semibold tracking-tight text-foreground\",\n                variant === \"minimal\" && \"text-lg font-normal\",\n                variant === \"highlight\" && \"text-2xl font-bold\",\n                variant === \"banner\" && \"text-sm\",\n                className\n            )}\n            {...props}\n        />\n    );\n});\nCallToActionTitle.displayName = \"CallToActionTitle\";\n\nconst CallToActionDescription = React.forwardRef<\n    HTMLParagraphElement,\n    React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n    const { variant } = React.useContext(CallToActionContext);\n    return (\n        <p\n            ref={ref}\n            className={cn(\n                \"text-muted-foreground\",\n                variant === \"minimal\" && \"text-sm\",\n                variant === \"banner\" && \"text-sm\",\n                className\n            )}\n            {...props}\n        />\n    );\n});\nCallToActionDescription.displayName = \"CallToActionDescription\";\n\nconst CallToActionAction = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n    const { variant } = React.useContext(CallToActionContext);\n    return (\n        <div\n            ref={ref}\n            className={cn(\n                \"mt-auto flex items-center gap-2 text-foreground\",\n                variant === \"minimal\" && \"mt-2\",\n                variant === \"banner\" && \"ml-auto\",\n                className\n            )}\n            {...props}\n        />\n    );\n});\nCallToActionAction.displayName = \"CallToActionAction\";\n\nconst CallToActionMedia = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n    const { variant } = React.useContext(CallToActionContext);\n    return (\n        <div\n            ref={ref}\n            className={cn(\n                \"flex items-center\",\n                variant === \"banner\" && \"w-full md:w-1/3\",\n                className\n            )}\n            {...props}\n        />\n    );\n});\nCallToActionMedia.displayName = \"CallToActionMedia\";\n\nexport {\n    CallToAction,\n    CallToActionContent,\n    CallToActionTitle,\n    CallToActionDescription,\n    CallToActionAction,\n    CallToActionMedia,\n};\n",
      "type": "registry:component",
      "target": "components/tomui/call-to-action.tsx"
    }
  ]
}