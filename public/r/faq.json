{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "faq",
  "type": "registry:component",
  "title": "FAQ",
  "description": "A styled accordion, based off the shadcn/ui accordion component. Provides a customizable FAQ component for answering common questions and providing support. Supports categories, collapsible items, and responsive design.",
  "registryDependencies": [
    "accordion",
    "label"
  ],
  "files": [
    {
      "path": "registry/faq/components/faq.tsx",
      "content": "\"use client\";\nimport {\n    Accordion,\n    AccordionContent,\n    AccordionItem,\n    AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Label } from \"@/components/ui/label\";\n\nexport interface FAQTypes {\n    question: string;\n    answer: string;\n    footer?: React.ReactNode;\n    category?: string;\n}\n\ninterface FAQProps {\n    faq: FAQTypes[];\n    title: string;\n}\n\nexport function FAQ({ faq, title }: FAQProps) {\n    // Group FAQ items by category\n    const groupedByCategory = faq.reduce(\n        (groups, item) => {\n            const category = item.category || \"Uncategorized\";\n            if (!groups[category]) {\n                groups[category] = [];\n            }\n            groups[category].push(item);\n            return groups;\n        },\n        {} as Record<string, FAQTypes[]>\n    );\n\n    // Get sorted category names\n    const categories = Object.keys(groupedByCategory).sort();\n    return (\n        <>\n            <div className=\"w-full space-y-3\">\n                <Label className=\"pointer-events-auto mx-auto flex w-fit items-center gap-1 rounded-3xl border bg-card/70 px-8 py-2 text-sm font-bold leading-tight text-foreground shadow-[0_6px_20px_hsl(var(--primary)/23%)] backdrop-blur-sm transition duration-200 ease-linear peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                    FAQ\n                </Label>\n                <Label className=\"pointer-events-auto mx-auto block w-full items-center gap-1 pb-0 text-center text-2xl font-bold leading-tight text-foreground peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                    {title}\n                </Label>\n            </div>\n\n            <div className=\"space-y-10\">\n                {categories.map((category, categoryIndex) => (\n                    <div\n                        key={`category-${categoryIndex}`}\n                        className=\"space-y-4\"\n                    >\n                        <Label className=\"pointer-events-auto flex items-center gap-1 text-base font-semibold text-foreground peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            {category}\n                        </Label>\n\n                        <Accordion\n                            type=\"single\"\n                            collapsible\n                            className=\"w-full space-y-6\"\n                        >\n                            {groupedByCategory[category].map((item, index) => (\n                                <AccordionItem\n                                    key={`faq-item-${categoryIndex}-${index}`}\n                                    value={`item-${categoryIndex}-${index}`}\n                                    className=\"overflow-hidden rounded-xl border bg-card p-0 transition-all duration-200 hover:shadow-[0_0_20px_1px_hsl(var(--primary)/10%)] data-[state=open]:shadow-[0_0_20px_1px_hsl(var(--primary)/10%)]\"\n                                >\n                                    <AccordionTrigger className=\"items-start whitespace-pre-wrap p-3 text-left text-xl font-bold hover:no-underline data-[state=open]:bg-muted/50 data-[state=open]:text-foreground [&>svg]:size-6\">\n                                        {item.question}\n                                    </AccordionTrigger>\n                                    <AccordionContent className=\"flex flex-col gap-2 whitespace-pre-wrap p-3 text-lg leading-loose tracking-wide\">\n                                        {item.answer}\n                                        {item.footer ? item.footer : null}\n                                    </AccordionContent>\n                                </AccordionItem>\n                            ))}\n                        </Accordion>\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n}\n",
      "type": "registry:component",
      "target": "components/tomui/faq.tsx"
    }
  ]
}