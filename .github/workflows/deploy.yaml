name: Build And Release

on:
    push:
        branches:
            - main
        paths-ignore:
            - "**/**.md"
            - "LICENSE"
            - ".github/**"
    pull_request:
        branches:
            - main

jobs:
    release:
        name: Release
        runs-on: ubuntu-24.04-arm
        permissions:
            contents: write
            issues: write
            pull-requests: write
            packages: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  persist-credentials: false

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10

            - name: Install dependencies
              run: pnpm install --no-frozen-lockfile

            - name: Semantic Release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: npx semantic-release

    docker:
        needs: release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        runs-on: ubuntu-24.04-arm
        timeout-minutes: 30
        permissions:
            contents: read
            packages: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  ref: main

            - name: Read version from package.json
              id: package-version
              run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.READ_WRITE_DOCKER_PAT }}

            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  platforms: linux/arm64
                  push: true
                  tags: |
                      ghcr.io/${{ github.repository_owner }}/ui:latest
                      ghcr.io/${{ github.repository_owner }}/ui:v${{ steps.package-version.outputs.VERSION }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Trigger Coolify deployment
              run: |
                  curl --request GET '${{ secrets.DEPLOY_WEBHOOK_URL }}' --header 'Authorization: Bearer ${{ secrets.DEPLOY_KEY }}'
